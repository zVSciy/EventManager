volumes:
  mysql-data:

networks:
  event-network:

services:
  #Service "db"
  tickets_db:
    image: mysql:latest

    volumes:
      - mysql-data:/var/lib/mysql

    env_file: .env
    environment:
      MYSQL_DATABASE: ${TICKETS_MYSQL_DATABASE}
      MYSQL_USER: ${TICKETS_MYSQL_USER}
      MYSQL_PASSWORD: ${TICKETS_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${TICKETS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE_PORT: ${TICKETS_MYSQL_DATABASE_PORT}

    networks:
      - event-network

    healthcheck:
      test: 'echo "select now();" | mysql -h ${TICKETS_MYSQL_DATABASE_HOST} -u${TICKETS_MYSQL_USER} -p${TICKETS_MYSQL_PASSWORD}'
      interval: 1s
      retries: 10
      start_period: 10s
      timeout: 1s

  #Service "api"
  tickets_api:
    build:
      context: .
      dockerfile: ./docker/fastapi/Dockerfile

    env_file: .env

    restart: always

    # expose:
    #   - 8000
    ports:
      - 8000:8000

    depends_on:
      tickets_db:
        condition: service_healthy

    command: >
      sh -c "python test_app.py &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --ssl-keyfile /app/ssl/key.pem --ssl-certfile /app/ssl/cert.pem"

    networks:
      - event-network

  #Service "sveltekit"
  tickets_web:
    build:
      context: .
      dockerfile: ./docker/sveltekit/Dockerfile

    expose:
      - 5173

    depends_on:
      - tickets_api

    networks:
      - event-network
      
  #Service "nginx"
  nginx:
    image: nginx:latest

    restart: always
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    
    ports:
      - "8080:443"
    
    depends_on:
      - tickets_web

    networks:
      - event-network